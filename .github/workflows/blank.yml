name: Fast GoGuardian CRX Update

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:

jobs:
  update-extension:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install fast tools
        run: sudo apt-get update && sudo apt-get install -y curl xmlstarlet libarchive-tools

      - name: Fetch CRX URL and Version
        id: fetch
        run: |
          curl -sL https://ext.goguardian.com/stable.xml -o stable.xml

          VERSION=$(xmlstarlet sel -N g="http://www.google.com/update2/response" -t -v "//g:updatecheck/@version" stable.xml)
          CRX_URL=$(xmlstarlet sel -N g="http://www.google.com/update2/response" -t -v "//g:updatecheck/@codebase" stable.xml)

          echo "Found version: $VERSION"
          echo "crx_url=$CRX_URL" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if version branch already exists
        id: check
        run: |
          VERSION="${{ steps.fetch.outputs.version }}"
          if git ls-remote --exit-code --heads origin "$VERSION"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Exit early if branch exists
        if: steps.check.outputs.exists == 'true'
        run: echo "Branch already exists. Skipping."

      - name: Download and Extract CRX
        if: steps.check.outputs.exists == 'false'
        run: |
          mkdir -p crx src
          curl -sL "${{ steps.fetch.outputs.crx_url }}" -o crx/extension.crx
          bsdtar -xf crx/extension.crx -C src

      - name: Commit and Push to New Branch
        if: steps.check.outputs.exists == 'false'
        run: |
          VERSION="${{ steps.fetch.outputs.version }}"
          git checkout --orphan "$VERSION"
          git rm -rf . > /dev/null 2>&1 || true

          git add src
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -m "Add GoGuardian extension version $VERSION"

          git push "https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git" "$VERSION"
